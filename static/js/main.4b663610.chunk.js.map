{"version":3,"sources":["Context.js","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/Contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","fetch","then","res","json","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","axios","delete","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","onDeleteClick","bind","react_router_dom","to","marginRight","Contacts","Fragment","Contacts_Contact","Header","heading","href","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","Axios","post","history","push","defineProperty","target","_this$state2","Layout_TextInputGroup","_callee","updContact","regenerator_default","wrap","_context","prev","next","abrupt","match","params","put","sent","stop","get","App","Context_Provider","Layout_Header","react_router","exact","path","component","axact","EditContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b663610.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ contacts: data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick(id, dispatch) {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {this.state.showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {value.contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { heading } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {heading}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  heading: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  heading: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contacs Manager</h1>\r\n      <p className=\"lead\">A simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"text-secondary\">Sorry that's not be found</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classnames(\"form-control form-control-lg\", {\r\n            \"is-invalid\": error\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"invalid-feedback\">{error}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport Axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone number is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    Axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact).then(\r\n      res => dispatch({ type: \"ADD_CONTACT\", payload: res.data })\r\n    );\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Your Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Your Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone number is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios\r\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n      .then(res => dispatch({ type: \"UPDATE_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Your Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Your Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./Components/Contacts/Contacts\";\nimport Header from \"./Components/Layout/Header\";\nimport About from \"./Components/pages/About\";\nimport NotFound from \"./Components/pages/NotFound\";\n\nimport { Provider } from \"./Context\";\nimport AddContact from \"./Components/Contacts/AddContact\";\nimport EditContact from \"./Components/Contacts/EditContact\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header heading=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route axact path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}